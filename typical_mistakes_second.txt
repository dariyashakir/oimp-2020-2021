#include "typical_mistakes.txt"

Читайте весь файл (и предыдущий).

### Задача А.

Можно заменить
    if (condition) {
        return true;
    } else {
        return false;
    }
на
    return condition;

Лучше else if вместо нескольких if.

Вместо
    getline (cin, tmp, ' ');
    x = stoi(tmp);
Используйте
    std::cin >> x;

Лучше х += n вместо n применений оператора ++х;

Константы, объявленные в UPPER_CASE, хочется вынести в global scope.

Инициализируйте вектор списком инициализации, если возможно.

Если ставите отступы в списке { x }, ставьте уж с обеих сторон.

Не используйте std::map, если его можно заменить на вектор.


### Задача B.

Ставить const на все подряд не нужно.

Структуру почти всегда нужно передавать в функцию по ссылке.
Более того, ссылка должна быть константной, если переменная не меняется.
То же с итерацией по вектору.

Сигнатуры объявления функции-друга и ее реализации должны совпдать.


### Задача C.

В лямбда-функцию, конечно, можно запихнуть компаратор. Но не стоит писать там сочинение, захватывая весь контекст.

В этой задаче не нужны глобальные переменные.


### Задача D.


### Задача E.

Не используйте С-массивы.

Создать вектор, заполненный нулями -- std::vector<int>(n, 0);

Те условия в if-ах, которые вы пишете, сливаются по выравниванию с кодом внутри if-а.
Ассистенту не нравится и он банит. Студенты видят реджект, не понимают за что, и грустят.

В слове std::vector<std::vector<int>> нет пробелов.


### Задача F.

Касты типа int к типу bool и обратно излишни.

Создать строку, заполненную нулями -- std::string(n, '0');


### Задача Г.

Создать квадратик, заполненный нулями -- std::vector<std::vector<int>>(n, std::vector<int>(n));

Перевод строки в выводе!


### Задача H.

Вместо size == 0 используйте метод empty

В аргументах std::vector() не нужно писать 0.

#include <iostream>, зачем?


### Задача I.

Если строки пустые, s.size() - 1  -- плохо.


### Задача J.

Кстати, чтобы посмотреть последний элемент коллекции, *можно* использовать метод back

### Задача К.


### Задача L.


### Задача М.


### Задача N.
