Задача А. --- это пометка для преподавателя. Студентам читать всё.

Старайтесь не использовать однобуквенные переменные.

Перенос строки в конце файла.

unsigned long long ... Надо типы uintXX_t, intXX_t --- гораздо понятнее.

Не нужны лишние круглые скобки внутри if вида if ((a == b) || (b == c)).

Не нужно отделение цифр в именах переменных подчеркиванием _
Да и вообще цифры в именах нежелательны, оч легко запутаться в коде. Можно писать first/second.

Обязательно пишем std::abs, если вы не хотите потратить 4 часа жизни на тупой баг.

Нужна пустая строка после include
Нужна пустая строка после using

Нужны фигурные скобки всегда даже при однострочных for и if. Это сбережет время при поиске багов
и избавит от глупых багов.

Инклюды в отсортированном по алфавиту порядке.

При переносе выражения внутри if (...) делайте два отступа, а само тело if {пишите с одним отступом.

Задача B.

Лучше в конце вывода в cout вывести перенос строки.

В этой задаче не нужен std::map, switch, if (особенно if без else).

При переносе выражения на следующую строку делайте один отступ, например:
std::vector<std::string> letters{
    "a",
    "b",
};

Задача C.

Проще везде использовать метод .size() и забыть про .length(), который есть не у всех типов.

Закрывающая фигурная скобка пишется с таким же числом отступов, как и строка с
соответствующей открывающей.

Константы в коде (например, 48) часто непонятны. Лучше завести переменную под нее (хотя для 48
конкретно в нашей задаче подходит хорошее обозначение: '0')

Задача D.

Не забываем про пробелы вокруг Всех бинарных операторов, например, 2 * x, а не 2*x.

Удаляйте закомментированные строки. Вообще писать комментарии --- плохая идея, так как это код,
который не компилируется. Следовательно, комментарии устаревают и теряют актуальность в реальных
проектах. Лучше писать код так, чтобы они не были нужны, например, понятно именовать переменные.

Не используйте переменные и типы, начинающиеся на _ и __. (например, __int64_t плохо, лучше int64_t)

Задача E.

Если используете double, то не надо кастовать к float. static_cast<float> плохо, static_cast<double> хорошо.

В условии задачи явно запрещен pow!



